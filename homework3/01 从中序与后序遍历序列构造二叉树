class Solution {
public:
    TreeNode* buildTree(vector<int>& inorder, vector<int>& postorder) {
        int n = postorder.size();
        return build(inorder, postorder, n - 1, 0, n - 1);
    }

private:
    TreeNode* build(vector<int>& inorder, vector<int>& postorder, int root, int start, int end) {
        if (start > end) { 
            return nullptr; 
        }
        TreeNode* tree = new TreeNode(postorder[root]);
        int i = start;
        while ((i < end) && inorder[i] != postorder[root])
            i++;
        tree->left = build(inorder, postorder, root - 1 - (end - i), start, i - 1);
        tree->right = build(inorder,postorder, root - 1, i + 1, end); 
        return tree;
    }
};